{"version":3,"mappings":"wOAAqB,UAAoB,CACrC,MAAMA,EAAU,SAAS,cAAc,MAAM,EAAE,QAC/C,GAAIA,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,eAAe,EAC/D,OAEJ,UAAWC,KAAQ,SAAS,iBAAiB,2BAA2B,EACpEC,EAAeD,CAAI,EAEvB,IAAI,iBAAkBE,GAAc,CAChC,UAAWC,KAAYD,EACnB,GAAIC,EAAS,OAAS,YAGtB,UAAWC,KAAQD,EAAS,WACpBC,EAAK,UAAY,QAAUA,EAAK,MAAQ,iBACxCH,EAAeG,CAAI,CAGvC,CAAK,EAAE,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,EAAI,CAAE,EACvD,SAASC,EAAaC,EAAQ,CAC1B,MAAMC,EAAY,GAClB,OAAID,EAAO,YACPC,EAAU,UAAYD,EAAO,WAC7BA,EAAO,iBACPC,EAAU,eAAiBD,EAAO,gBAClCA,EAAO,cAAgB,kBACvBC,EAAU,YAAc,UACnBD,EAAO,cAAgB,YAC5BC,EAAU,YAAc,OAExBA,EAAU,YAAc,cACrBA,CACV,CACD,SAASN,EAAeD,EAAM,CAC1B,GAAIA,EAAK,GAEL,OACJA,EAAK,GAAK,GAEV,MAAMO,EAAYF,EAAaL,CAAI,EACnC,MAAMA,EAAK,KAAMO,CAAS,CAC7B,CACL,8yBCpCO,eAAeC,GAAa,EACX,MAAMC,aAA8C,+BAAe,kBAE3E,KAAK,CACjB,OAAQ,CACN,SAAU,CAAC,6CAA6C,CACzD,CACL,CAAG,CACH,CCCA,QAAeC,EAAc,CAC3B,WAAY,CACV,YACD,EACD,MAAO,CACL,OAAQ,CACN,MAAO,CACL,OAAQ,CACN,QAAS,UACT,UAAW,SACZ,CACF,CACF,CACF,CACH,CAAC,EC1BKC,EAAS,CACb,CACE,KAAM,IACN,UAAW,IAAKF,MAAC,OAAO,yBAAgC,kKACxD,SAAU,CACR,CACE,KAAM,GACN,SAAU,IACX,EACD,CACE,KAAM,QACN,KAAM,QACN,MAAO,GAIP,UAAW,IAAMA,aAAuC,uBAAmB,uPAC5E,EACD,CACE,KAAM,aACN,KAAM,OACN,MAAO,GAIP,UAAW,IAAKA,MAAC,OAAsC,sBAAkB,sUAC1E,EACD,CACE,KAAM,YACN,KAAM,cACN,MAAO,GAIP,UAAW,UAAM,OAAsC,6BAAyB,wRACjF,EACD,CACE,KAAM,eACN,KAAM,SACN,MAAO,GAIP,UAAW,IAAMA,aAAyC,wBAAoB,0LAC/E,EACD,CACE,KAAM,gBACN,KAAM,UACN,MAAO,GAIP,UAAW,UAAM,OAAyC,yBAAqB,sNAChF,EACD,CACE,KAAM,gBACN,KAAM,UACN,MAAO,GAIP,UAAW,UAAM,OAAyC,yBAAqB,yNAChF,EACD,CACE,KAAM,uBACN,KAAM,SACN,MAAO,GACP,UAAW,IAAMA,aAAwC,wBAAoB,6SAC9E,CACF,CACF,CACH,EAEMG,EAASC,EAAa,CAC1B,QAASC,EAAqB,CAAW,EAAC,QAAQ,EAClD,KAAM,OACN,QACF,CAAC,ECpEM,SAASC,EAAiBC,EAAK,CACpCR,EAAW,EACXQ,EACG,IAAIC,CAAO,EACX,IAAIL,CAAM,EACV,IAAIM,EAAS,CACZ,OAAQ,CACN,GAAI,cACL,CACF,EAAEN,CAAM,CACb,CCPA,MAAMI,EAAMG,EAAUC,CAAG,EAEzBL,EAAgBC,CAAG,EAEnBA,EAAI,MAAM,MAAM","names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","loadFonts","__vitePreload","createVuetify","routes","router","createRouter","createWebHashHistory","registerPlugins","app","vuetify","VueGtag","createApp","App"],"sources":["../../vite/modulepreload-polyfill","../../src/plugins/webfontloader.js","../../src/plugins/vuetify.js","../../src/router/index.js","../../src/plugins/index.js","../../src/main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/**\r\n * plugins/webfontloader.js\r\n *\r\n * webfontloader documentation: https://github.com/typekit/webfontloader\r\n */\r\n\r\nexport async function loadFonts () {\r\n  const webFontLoader = await import(/* webpackChunkName: \"webfontloader\" */'webfontloader')\r\n\r\n  webFontLoader.load({\r\n    google: {\r\n      families: ['Roboto:100,300,400,500,700,900&display=swap'],\r\n    },\r\n  })\r\n}\r\n","/**\r\n * plugins/vuetify.js\r\n *\r\n * Framework documentation: https://vuetifyjs.com`\r\n */\r\n\r\n// Styles\r\nimport '@mdi/font/css/materialdesignicons.css'\r\nimport 'vuetify/styles'\r\n\r\n// Composables\r\nimport { createVuetify } from 'vuetify'\r\nimport { VDataTable } from 'vuetify/labs/VDataTable'\r\n\r\n// https://vuetifyjs.com/en/introduction/why-vuetify/#feature-guides\r\nexport default createVuetify({\r\n  components: {\r\n    VDataTable,\r\n  },\r\n  theme: {\r\n    themes: {\r\n      light: {\r\n        colors: {\r\n          primary: '#1867C0',\r\n          secondary: '#5CBBF6',\r\n        },\r\n      },\r\n    },\r\n  },\r\n})\r\n","// Composables\r\nimport { createRouter, createWebHashHistory } from 'vue-router'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: () => import('@/layouts/default/Default.vue'),\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirect: 'en',\r\n      },\r\n      {\r\n        path: ':lang',\r\n        name: 'About',\r\n        props: true,\r\n        // route level code-splitting\r\n        // this generates a separate chunk (about.[hash].js) for this route\r\n        // which is lazy-loaded when the route is visited.\r\n        component: () => import(/* webpackChunkName: \"about\" */ '@/views/About.vue'),\r\n      },\r\n      {\r\n        path: ':lang/team',\r\n        name: 'Team',\r\n        props: true,\r\n        // route level code-splitting\r\n        // this generates a separate chunk (about.[hash].js) for this route\r\n        // which is lazy-loaded when the route is visited.\r\n        component: () => import(/* webpackChunkName: \"team\" */ '@/views/Team.vue'),\r\n      },\r\n      {\r\n        path: ':lang/pub',\r\n        name: 'Publication',\r\n        props: true,\r\n        // route level code-splitting\r\n        // this generates a separate chunk (about.[hash].js) for this route\r\n        // which is lazy-loaded when the route is visited.\r\n        component: () => import(/* webpackChunkName: \"pubs\" */ '@/views/Publication.vue'),\r\n      },\r\n      {\r\n        path: ':lang/course',\r\n        name: 'Course',\r\n        props: true,\r\n        // route level code-splitting\r\n        // this generates a separate chunk (about.[hash].js) for this route\r\n        // which is lazy-loaded when the route is visited.\r\n        component: () => import(/* webpackChunkName: \"contact\" */ '@/views/Course.vue'),\r\n      },\r\n      {\r\n        path: ':lang/project',\r\n        name: 'Project',\r\n        props: true,\r\n        // route level code-splitting\r\n        // this generates a separate chunk (about.[hash].js) for this route\r\n        // which is lazy-loaded when the route is visited.\r\n        component: () => import(/* webpackChunkName: \"contact\" */ '@/views/Project.vue'),\r\n      },\r\n      {\r\n        path: ':lang/contact',\r\n        name: 'Contact',\r\n        props: true,\r\n        // route level code-splitting\r\n        // this generates a separate chunk (about.[hash].js) for this route\r\n        // which is lazy-loaded when the route is visited.\r\n        component: () => import(/* webpackChunkName: \"contact\" */ '@/views/Contact.vue'),\r\n      },\r\n      {\r\n        path: ':lang/:given/:family',\r\n        name: 'Person',\r\n        props: true,\r\n        component: () => import(/* webpackChunkName: \"person\" */ '@/views/Person.vue'),\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(process.env.BASE_URL),\r\n  mode: 'hash',\r\n  routes,\r\n})\r\n\r\nexport default router\r\n","/**\r\n * plugins/index.js\r\n *\r\n * Automatically included in `./src/main.js`\r\n */\r\n\r\n// Plugins\r\nimport { loadFonts } from './webfontloader'\r\nimport vuetify from './vuetify'\r\nimport router from '../router'\r\nimport VueGtag from \"vue-gtag\"\r\n\r\nexport function registerPlugins (app) {\r\n  loadFonts()\r\n  app\r\n    .use(vuetify)\r\n    .use(router)\r\n    .use(VueGtag, {\r\n      config: { \r\n        id: \"G-89DJ3XMCHN\",\r\n      },\r\n    }, router)\r\n}\r\n","/**\r\n * main.js\r\n *\r\n * Bootstraps Vuetify and other plugins then mounts the App`\r\n */\r\n\r\n// Components\r\nimport App from './App.vue'\r\n\r\n// Composables\r\nimport { createApp } from 'vue'\r\n\r\n// Plugins\r\nimport { registerPlugins } from '@/plugins'\r\n\r\nconst app = createApp(App)\r\n\r\nregisterPlugins(app)\r\n\r\napp.mount('#app')\r\n"],"file":"assets/index.22583c47.js"}