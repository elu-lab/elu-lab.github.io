{"version":3,"mappings":"wOAAqB,UAAoB,CACrC,MAAMA,EAAU,SAAS,cAAc,MAAM,EAAE,QAC/C,GAAIA,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,eAAe,EAC/D,OAEJ,UAAWC,KAAQ,SAAS,iBAAiB,2BAA2B,EACpEC,EAAeD,CAAI,EAEvB,IAAI,iBAAkBE,GAAc,CAChC,UAAWC,KAAYD,EACnB,GAAIC,EAAS,OAAS,YAGtB,UAAWC,KAAQD,EAAS,WACpBC,EAAK,UAAY,QAAUA,EAAK,MAAQ,iBACxCH,EAAeG,CAAI,CAGvC,CAAK,EAAE,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,EAAI,CAAE,EACvD,SAASC,EAAaC,EAAQ,CAC1B,MAAMC,EAAY,GAClB,OAAID,EAAO,YACPC,EAAU,UAAYD,EAAO,WAC7BA,EAAO,iBACPC,EAAU,eAAiBD,EAAO,gBAClCA,EAAO,cAAgB,kBACvBC,EAAU,YAAc,UACnBD,EAAO,cAAgB,YAC5BC,EAAU,YAAc,OAExBA,EAAU,YAAc,cACrBA,CACV,CACD,SAASN,EAAeD,EAAM,CAC1B,GAAIA,EAAK,GAEL,OACJA,EAAK,GAAK,GAEV,MAAMO,EAAYF,EAAaL,CAAI,EACnC,MAAMA,EAAK,KAAMO,CAAS,CAC7B,CACL,8yBCpCO,eAAeC,GAAa,EACX,MAAMC,aAA8C,+BAAe,aAAC,KAE5E,KAAK,CACjB,OAAQ,CACN,SAAU,CAAC,6CAA6C,CACzD,CACL,CAAG,CACH,CCCA,QAAeC,EAAc,CAC3B,WAAY,CACV,YACD,EACD,MAAO,CACL,OAAQ,CACN,MAAO,CACL,OAAQ,CACN,QAAS,UACT,UAAW,SACZ,CACF,CACF,CACF,CACH,CAAC,EC1BKC,EAAS,CACb,CACE,KAAM,IACN,UAAW,IAAMF,aAAO,yBAA+B,kKACvD,SAAU,CACR,CACE,KAAM,GACN,SAAU,IACX,EACD,CACE,KAAM,QACN,KAAM,QACN,MAAO,GAIP,UAAW,IAAKA,MAAC,OAAuC,8QACzD,EACD,CACE,KAAM,aACN,KAAM,OACN,MAAO,GAIP,UAAW,IAAKA,MAAC,OAAsC,4VACxD,EACD,CACE,KAAM,YACN,KAAM,cACN,MAAO,GAIP,UAAW,UAAM,OAAsC,qTACxD,EACD,CACE,KAAM,eACN,KAAM,SACN,MAAO,GAIP,UAAW,IAAMA,aAAyC,kNAC3D,EACD,CACE,KAAM,gBACN,KAAM,UACN,MAAO,GAIP,UAAW,IAAMA,aAAyC,+OAC3D,EACD,CACE,KAAM,gBACN,KAAM,UACN,MAAO,GAIP,UAAW,IAAMA,aAAyC,kPAC3D,EACD,CACE,KAAM,uBACN,KAAM,SACN,MAAO,GACP,UAAW,IAAMA,aAAwC,qUAC1D,CACF,CACF,CACH,EAEMG,EAASC,EAAa,CAC1B,QAASC,EAAqB,CAAW,EAAC,QAAQ,EAClD,KAAM,OACN,QACF,CAAC,ECpEM,SAASC,EAAiBC,EAAK,CACpCR,EAAW,EACXQ,EACG,IAAIC,CAAO,EACX,IAAIL,CAAM,EACV,IAAIM,EAAS,CACZ,OAAQ,CACN,GAAI,cACL,CACF,EAAEN,CAAM,CACb,CCPA,MAAMI,EAAMG,EAAUC,CAAG,EAEzBL,EAAgBC,CAAG,EAEnBA,EAAI,MAAM,MAAM","names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","loadFonts","__vitePreload","createVuetify","routes","router","createRouter","createWebHashHistory","registerPlugins","app","vuetify","VueGtag","createApp","App"],"sources":["../../vite/modulepreload-polyfill","../../src/plugins/webfontloader.js","../../src/plugins/vuetify.js","../../src/router/index.js","../../src/plugins/index.js","../../src/main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/**\n * plugins/webfontloader.js\n *\n * webfontloader documentation: https://github.com/typekit/webfontloader\n */\n\nexport async function loadFonts () {\n  const webFontLoader = await import(/* webpackChunkName: \"webfontloader\" */'webfontloader')\n\n  webFontLoader.load({\n    google: {\n      families: ['Roboto:100,300,400,500,700,900&display=swap'],\n    },\n  })\n}\n","/**\n * plugins/vuetify.js\n *\n * Framework documentation: https://vuetifyjs.com`\n */\n\n// Styles\nimport '@mdi/font/css/materialdesignicons.css'\nimport 'vuetify/styles'\n\n// Composables\nimport { createVuetify } from 'vuetify'\nimport { VDataTable } from 'vuetify/labs/VDataTable'\n\n// https://vuetifyjs.com/en/introduction/why-vuetify/#feature-guides\nexport default createVuetify({\n  components: {\n    VDataTable,\n  },\n  theme: {\n    themes: {\n      light: {\n        colors: {\n          primary: '#1867C0',\n          secondary: '#5CBBF6',\n        },\n      },\n    },\n  },\n})\n","// Composables\nimport { createRouter, createWebHashHistory } from 'vue-router'\n\nconst routes = [\n  {\n    path: '/',\n    component: () => import('@/layouts/default/Default.vue'),\n    children: [\n      {\n        path: '',\n        redirect: 'en',\n      },\n      {\n        path: ':lang',\n        name: 'About',\n        props: true,\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"about\" */ '@/views/About.vue'),\n      },\n      {\n        path: ':lang/team',\n        name: 'Team',\n        props: true,\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"team\" */ '@/views/Team.vue'),\n      },\n      {\n        path: ':lang/pub',\n        name: 'Publication',\n        props: true,\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"pubs\" */ '@/views/Publication.vue'),\n      },\n      {\n        path: ':lang/course',\n        name: 'Course',\n        props: true,\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"contact\" */ '@/views/Course.vue'),\n      },\n      {\n        path: ':lang/project',\n        name: 'Project',\n        props: true,\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"contact\" */ '@/views/Project.vue'),\n      },\n      {\n        path: ':lang/contact',\n        name: 'Contact',\n        props: true,\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"contact\" */ '@/views/Contact.vue'),\n      },\n      {\n        path: ':lang/:given/:family',\n        name: 'Person',\n        props: true,\n        component: () => import(/* webpackChunkName: \"person\" */ '@/views/Person.vue'),\n      },\n    ],\n  },\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(process.env.BASE_URL),\n  mode: 'hash',\n  routes,\n})\n\nexport default router\n","/**\n * plugins/index.js\n *\n * Automatically included in `./src/main.js`\n */\n\n// Plugins\nimport { loadFonts } from './webfontloader'\nimport vuetify from './vuetify'\nimport router from '../router'\nimport VueGtag from \"vue-gtag\"\n\nexport function registerPlugins (app) {\n  loadFonts()\n  app\n    .use(vuetify)\n    .use(router)\n    .use(VueGtag, {\n      config: { \n        id: \"G-89DJ3XMCHN\",\n      },\n    }, router)\n}\n","/**\n * main.js\n *\n * Bootstraps Vuetify and other plugins then mounts the App`\n */\n\n// Components\nimport App from './App.vue'\n\n// Composables\nimport { createApp } from 'vue'\n\n// Plugins\nimport { registerPlugins } from '@/plugins'\n\nconst app = createApp(App)\n\nregisterPlugins(app)\n\napp.mount('#app')\n"],"file":"assets/index.d18bb577.js"}